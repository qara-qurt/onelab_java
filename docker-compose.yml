version: '3.8'

services:

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: restaurant
      POSTGRES_USER: dias
      POSTGRES_PASSWORD: qaraqurt
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dias -d restaurant" ]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=gempluspwd
      - xpack.security.enabled=true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://elasticsearch:9200 >/dev/null || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper


  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_started
    ports:
      - "8761:8761"
    environment:
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./config-server/configs:/configs

  gateway_cli_service:
    build:
      context: ./gateway_cli_service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      kafka:
        condition: service_started
    ports:
      - "8085:8085"
    environment:
      SERVER_PORT: 8085
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_USERNAME: elastic
      SPRING_ELASTICSEARCH_PASSWORD: gempluspwd
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SERVER_PORT: 8081
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_USERNAME: elastic
      SPRING_ELASTICSEARCH_PASSWORD: gempluspwd
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  restaurant_service:
    build:
      context: ./restaurant_service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      SERVER_PORT: 8083
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_USERNAME: elastic
      SPRING_ELASTICSEARCH_PASSWORD: gempluspwd

volumes:
  elastic_data:
  zookeeper_data:
  postgres_data:


package org.onelab.gateway_cli_service.utils;

import org.onelab.gateway_cli_service.entity.Dish;
import org.onelab.gateway_cli_service.entity.Menu;
import org.onelab.gateway_cli_service.entity.Order;
import org.onelab.gateway_cli_service.entity.User;

import java.util.List;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

public class Utils {
    private static final Pattern NAME_PATTERN = Pattern.compile("^[a-zA-Z–∞-—è–ê-–Ø0-9\\s-]{2,50}$");

    private Utils() {
        throw new UnsupportedOperationException("Utility class should not be instantiated.");
    }

    public static String formatUser(User user) {
        return """
               üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %s %s
               üë§ Username: %s
               üìå ID: %s
               üì± –¢–µ–ª–µ—Ñ–æ–Ω: %s
               üí∞ –ë–∞–ª–∞–Ω—Å: %.2f kz
               üîí –ê–∫—Ç–∏–≤–µ–Ω: %s
               """.formatted(
                user.getName(),
                user.getSurname(),
                user.getUsername(),
                user.getId(),
                user.getPhone(),
                user.getBalance(),
                user.isActive() ? "–î–∞" : "–ù–µ—Ç"
        );
    }

    public static String formatDish(Dish dish) {
        return """
               üçΩÔ∏è –ë–ª—é–¥–æ: %s
               üìå ID: %s
               üí∞ –¶–µ–Ω–∞: %.2f kz
               üìù –û–ø–∏—Å–∞–Ω–∏–µ: %s
               """.formatted(
                dish.getName(),
                dish.getId(),
                dish.getPrice(),
                dish.getDescription()
        );
    }

    public static String formatMenu(Menu menu) {
        return """
               üçΩÔ∏è –ú–µ–Ω—é: %s
               üìå ID: %s
               """.formatted(
                menu.getName(),
                menu.getId()
        );
    }

    public static String formatOrder(Order order) {
        String dishes = order.getDishes().stream()
                .map(Dish::getName)
                .collect(Collectors.joining(", "));

        return "üì¶ –ó–∞–∫–∞–∑ ID: " + order.getId() + "\n" +
                "üë§ –ö–ª–∏–µ–Ω—Ç: " + order.getCustomerId() + "\n" +
                "üçΩÔ∏è –ë–ª—é–¥–∞: [" + dishes + "]\n" +
                "üí∞ –¶–µ–Ω–∞: " + order.getTotalPrice() + " KZT\n" +
                "üìå –°—Ç–∞—Ç—É—Å: " + order.getStatus();
    }

    public static String validateUserInput(String name, String surname, String username, String phone, String password) {
        if (name == null || name.trim().isEmpty()) {
            return "‚ùå –û—à–∏–±–∫–∞: –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.";
        }
        if (surname == null || surname.trim().isEmpty()) {
            return "‚ùå –û—à–∏–±–∫–∞: –§–∞–º–∏–ª–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.";
        }
        if (username == null || username.trim().isEmpty()) {
            return "‚ùå –û—à–∏–±–∫–∞: –õ–æ–≥–∏–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.";
        }
        if (!phone.matches("^\\+[0-9]{10,15}$")) {
            return "‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –î–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10-15 —Ü–∏—Ñ—Ä.";
        }
        if (password == null || password.length() < 6) {
            return "‚ùå –û—à–∏–±–∫–∞: –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤.";
        }
        return null;
    }

    public static String validateDish(String name, String description, double price) {
        if (name == null || name.trim().isEmpty()) {
            return "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.";
        }
        if (description == null || description.trim().isEmpty()) {
            return "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.";
        }
        if (price <= 0) {
            return "‚ùå –¶–µ–Ω–∞ –±–ª—é–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.";
        }
        return null;
    }

    public static String validateMenuInput(String name, List<String> dishIDs) {
        if (name == null || !NAME_PATTERN.matcher(name).matches()) {
            return "‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—é!";
        }
        if (dishIDs == null || dishIDs.isEmpty()) {
            return "‚ùå –û—à–∏–±–∫–∞: –ú–µ–Ω—é –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –±–ª—é–¥–æ.";
        }
        return null;
    }
}
